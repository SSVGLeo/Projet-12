{"version":3,"file":"static/js/90.f6bc5fa6.chunk.js","mappings":"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","sources":["components/projects/ProjectSingle.jsx","components/projects/ProjectsFilter.jsx","components/projects/ProjectModal.jsx","components/projects/ProjectsGrid.jsx","pages/Projects.jsx","data/projects.js","context/ProjectsContext.jsx"],"sourcesContent":["import { motion } from \"framer-motion\";\nconst ProjectSingle = ({ title, category, image, onClick }) => {\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1, delay: 1 }}\n      transition={{\n        ease: \"easeInOut\",\n        duration: 0.7,\n        delay: 0.15,\n      }}\n    >\n      <div\n        className=\"rounded-xl shadow-lg hover:shadow-xl mb-10 sm:mb-0 bg-secondary-light dark:bg-ternary-dark card cursor-pointer\"\n        onClick={onClick}\n      >\n        <div className=\"card-image\">\n          <img\n            src={image}\n            className=\"rounded-t-xl border-none w-inherit\"\n            alt=\"Single Project\"\n          />\n        </div>\n\n        <div className=\"text-center px-4 pt-3\">\n          <p className=\"font-general-medium text-lg text-ternary-dark dark:text-ternary-light mb-2\">\n            {title}\n          </p>\n          <span className=\"text-sm text-ternary-dark dark:text-ternary-light\">\n            {category}\n          </span>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default ProjectSingle;\n","import React from \"react\";\nimport { useLanguage } from \"../../translation/LanguageContext\";\nimport { translations } from \"../../translation/translation\";\n\nconst selectOptions = [\n\t'HTML/CSS',\n\t'Javascript',\n\t'React',\n];\n\nconst ProjectsFilter = ({ setSelectProject }) => {\n\tconst {language} = useLanguage();\n\treturn (\n\t\t<select\n\t\t\tonChange={(e) => {\n\t\t\t\tsetSelectProject(e.target.value);\n\t\t\t}}\n\t\t\tclassName=\"font-general-medium \n                px-4\n                sm:px-6\n                py-2\n                border\n                dark:border-secondary-dark\n                rounded-lg\n                text-sm\n                sm:text-md\n                dark:font-medium\n                bg-secondary-light\n                dark:bg-ternary-dark\n                text-primary-dark\n                dark:text-ternary-light\n            \"\n\t\t>\n\t\t\t{/* {translations[language].projects.category} */}\n\t\t\t<option value=\"all\" className=\"text-sm sm:text-md\">\n\t\t\t\t{translations[language].projects.category}\n\t\t\t</option>\n\n\t\t\t{selectOptions.map((option) => (\n\t\t\t\t<option className=\"text-normal sm:text-md\" key={option}>\n\t\t\t\t\t{option}\n\t\t\t\t</option>\n\t\t\t))}\n\t\t</select>\n\t);\n};\n\nexport default ProjectsFilter;\n","import { motion } from \"framer-motion\";\r\nimport { FiX } from \"react-icons/fi\";\r\nimport { useLanguage } from \"../../translation/LanguageContext\";\r\n\r\nconst ProjectModal = ({ project, onClose }) => {\r\n  const { language } = useLanguage();\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      className=\"font-general-medium fixed inset-0 z-30 transition-all duration-500\"\r\n    >\r\n      <div className=\"bg-filter bg-black bg-opacity-50 fixed inset-0 w-full h-full z-20\"></div>\r\n\r\n      <main className=\"flex flex-col items-center justify-center h-full w-full\">\r\n        <div className=\"modal-wrapper flex items-center z-30\">\r\n          <div className=\"modal max-w-md mx-5 xl:max-w-xl lg:max-w-xl md:max-w-xl bg-secondary-light dark:bg-primary-dark max-h-screen shadow-lg flex-row rounded-lg relative\">\r\n            <div className=\"modal-header flex justify-between gap-10 p-5 border-b border-ternary-light dark:border-ternary-dark\">\r\n              <button\r\n                onClick={onClose}\r\n                className=\"absolute top-4 right-4 text-2xl\"\r\n              >\r\n                <FiX />\r\n              </button>\r\n              <h2 className=\"text-xl font-bold mb-4 dark:text-ternary-light\">{project.title[language]}</h2>\r\n            </div>\r\n            <div className=\"modal-body p-5 w-full h-full\">\r\n              <img\r\n                src={project.img}\r\n                className=\"rounded-t-xl border-none\"\r\n                alt=\"Single Project\"\r\n              />\r\n              <p className=\"text-lg m-4 text-center dark:text-ternary-light\">\r\n                {project.ProjectInfo.ObjectivesDetails[language]}\r\n              </p>\r\n              {project.ProjectInfo.ProjectDetails.map((block) => (\r\n                <p key={block.id} className=\"mb-2 text-sm2 text-center dark:text-ternary-light\">\r\n                  {block.details[language]}\r\n                </p>\r\n              ))}\r\n            </div>\r\n            <div className=\"modal-footer mt-2 sm:mt-0 sm:px-0 py-5 border0-t text-center gap-2\">\r\n              {project.link && (\r\n                <a\r\n                  href={project.link}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"px-4 py-2 m-4 bg-blue-600 text-primary-dark rounded-md dark:text-ternary-light hover:bg-indigo-600 hover:text-white transition\"\r\n                >\r\n                  {project.ProjectInfo.SeeSite[language]}\r\n                </a>\r\n              )}\r\n              {project.github && (\r\n                <a\r\n                  href={project.github}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"px-4 py-2 m-4 bg-gray-800 text-primary-dark rounded-md dark:text-ternary-light hover:bg-indigo-600 hover:text-white transition\"\r\n                >\r\n                  {project.ProjectInfo.SeeCode[language]}\r\n                </a>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default ProjectModal;\r\n","import { useContext } from \"react\";\nimport { FiSearch } from \"react-icons/fi\";\nimport ProjectSingle from \"./ProjectSingle\";\nimport { ProjectsContext } from \"../../context/ProjectsContext\";\nimport ProjectsFilter from \"./ProjectsFilter\";\nimport { useState } from \"react\";\nimport ProjectModal from \"./ProjectModal\";\nimport { useLanguage } from \"../../translation/LanguageContext\";\nimport { translations } from \"../../translation/translation\";\n\nconst ProjectsGrid = () => {\n  const {\n    projects,\n    searchProject,\n    setSearchProject,\n    searchProjectsByTitle,\n    selectProject,\n    setSelectProject,\n    selectProjectsByCategory,\n  } = useContext(ProjectsContext);\n\n  const [selectedProject, setSelectedProject] = useState(null);\n\n  const {language} = useLanguage();\n\n  return (\n    <section className=\"py-5 sm:py-10 mt-5 sm:mt-10\">\n      <div className=\"text-center\">\n        <p className=\"font-general-medium text-2xl sm:text-4xl mb-1 text-ternary-dark dark:text-ternary-light\">\n          {translations[language].projects.title}\n        </p>\n      </div>\n\n      <div className=\"mt-10 sm:mt-16\">\n        <h3\n          className=\"font-general-regular \n                        text-center text-secondary-dark\n                        dark:text-ternary-light\n                        text-md\n                        sm:text-xl\n                        mb-3\n                        \"\n        >\n          {translations[language].projects.description}\n        </h3>\n        <div\n          className=\"\n                        flex\n                        justify-between\n                        border-b border-primary-light\n                        dark:border-secondary-dark\n                        pb-3\n                        gap-3\n                        \"\n        >\n          <div className=\"flex justify-between gap-2\">\n            <span\n              className=\"\n                                hidden\n                                sm:block\n                                bg-primary-light\n                                dark:bg-ternary-dark\n                                p-2.5\n                                shadow-sm\n                                rounded-xl\n                                cursor-pointer\n                                \"\n            >\n              <FiSearch className=\"text-ternary-dark dark:text-ternary-light w-5 h-5\"></FiSearch>\n            </span>\n            <input\n              onChange={(e) => {\n                setSearchProject(e.target.value);\n              }}\n              className=\"font-general-medium \n                                pl-3\n                                pr-1\n                                sm:px-4\n                                py-2\n                                border \n                            border-gray-200\n                                dark:border-secondary-dark\n                                rounded-lg\n                                text-sm\n                                sm:text-md\n                                bg-secondary-light\n                                dark:bg-ternary-dark\n                                text-primary-dark\n                                dark:text-ternary-light\n                                \"\n              id=\"name\"\n              name=\"name\"\n              type=\"search\"\n              required=\"\"\n              placeholder={translations[language].projects.research}\n              aria-label=\"Name\"\n            />\n          </div>\n\n          <ProjectsFilter setSelectProject={setSelectProject} />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 grid-rows-2 sm:grid-cols-2 lg:grid-cols-3 mt-6 sm:gap-10\">\n        {selectProject\n          ? selectProjectsByCategory.map((project) => (\n              <ProjectSingle\n                title={project.title[language]}\n                category={project.category}\n                image={project.img}\n                key={project.id}\n                link={project.link}\n                onClick={() => setSelectedProject(project)}\n              />\n            ))\n          : searchProject\n          ? searchProjectsByTitle.map((project) => (\n              <ProjectSingle\n                title={project.title[language]}\n                category={project.category}\n                image={project.img}\n                key={project.id}\n                link={project.link}\n                onClick={() => setSelectedProject(project)}\n              />\n            ))\n          : projects.map((project) => (\n              <ProjectSingle\n                title={project.title[language]}\n                category={project.category}\n                image={project.img}\n                key={project.id}\n                link={project.link}\n                onClick={() => setSelectedProject(project)}\n              />\n            ))}\n      </div>\n\t  {selectedProject && (\n          <ProjectModal\n            project={selectedProject}\n            onClose={() => setSelectedProject(null)}\n          />\n        )}\n    </section>\n  );\n};\n\nexport default ProjectsGrid;\n","import ProjectsGrid from '../components/projects/ProjectsGrid';\nimport { ProjectsProvider } from '../context/ProjectsContext';\n\nconst Projects = () => {\n\treturn (\n\t\t<ProjectsProvider>\n\t\t\t<div className=\"container mx-auto\">\n\t\t\t\t<ProjectsGrid />\n\t\t\t</div>\n\t\t</ProjectsProvider>\n\t);\n};\n\nexport default Projects;\n","// Import images\nimport WebImage2 from '../images/kasa.png';\nimport MobileImage1 from '../images/ohmyfood.png';\nimport MobileImage2 from '../images/nina.png';\nimport UIImage1 from '../images/argent-bank.png';\n\nexport const projectsData = [\n\t{\n\t\tid: 1,\n\t\ttitle: {\n\t\t\tfr: 'Kasa, immobilier',\n\t\t\ten: \"Kasa, real estate\",\n\t\t},\n\t\tcategory: 'React',\n\t\timg: WebImage2,\n\t\tlink: \"https://ssvgleo.github.io/Projet-7-Kasa/\",\n\t\tgithub: \"https://github.com/SSVGLeo/Projet-7-Kasa\",\n\t\tProjectInfo: {\n\t\t\tSeeSite: {\n\t\t\t\tfr: \"Voir le site\",\n\t\t\t\ten: \"The website\",\n\t\t\t},\n\t\t\tSeeCode: {\n\t\t\t\tfr: \"Voir le code\",\n\t\t\t\ten: \"The code\",\n\t\t\t},\n\t\t\tObjectivesDetails: {\n\t\t\t\tfr: \"Ce projet à pour but d'initier au framework React et la notion de développement orienté objet via les composants.\",\n\t\t\t\ten : \"This project's goal is to introduce the React framework and the concept of object-oriented development through components.\",\n\t\t\t}, \n\t\t\tProjectDetails: [\n\t\t\t\t{\n\t\t\t\t\tid: 1,\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tfr: \"Utilisation de composants réutilisables et de props.\",\n\t\t\t\t\t\ten: \"Use of reusable components and props.\",\n\t\t\t\t\t} \n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 2,\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tfr: \"Apprentissage de React Router pour créer une navigation dynamique.\",\n\t\t\t\t\t\ten: \"Learn React Router to create a dynamic navigation.\",\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t]\n\t\t}\n\t},\n\t{\n\t\tid: 2,\n\t\ttitle: {\n\t\t\tfr: 'Nina Carducci',\n\t\t\ten: \"Nina Carducci\",\n\t\t},\n\t\tcategory: 'Javascript',\n\t\timg: MobileImage2,\n\t\tlink: \"https://ssvgleo.github.io/Projet-8-OC/\",\n\t\tgithub: \"https://github.com/SSVGLeo/Projet-8-OC\",\n\t\tProjectInfo: {\n\t\t\tSeeSite: {\n\t\t\t\tfr: \"Voir le site\",\n\t\t\t\ten: \"The website\",\n\t\t\t},\n\t\t\tSeeCode: {\n\t\t\t\tfr: \"Voir le code\",\n\t\t\t\ten: \"The code\",\n\t\t\t},\n\t\t\tObjectivesDetails: {\n\t\t\t\tfr: \"Amélioration du SEO de la page de Nina Carducci, photographe indépendante.\",\n\t\t\t\ten: \"Improve Nina Carducci's page's SEO.\",\n\t\t\t} ,\n\t\t\tProjectDetails: [\n\t\t\t\t{\n\t\t\t\t\tid: 1,\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tfr:\"Utilisation de lighthouse pour réaliser une analyse du SEO de la page.\",\n\t\t\t\t\t\ten: \"Used lighthouse to realize a SEO analysis of the page.\", \n\t\t\t\t\t} ,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 2,\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tfr:\"Amélioration des performances, de l'accessibilité et de la compatibilité des navigateurs.\",\n\t\t\t\t\t\ten: \"Upgraded performance, accessibility and browser compatibility.\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]\n\t\t}\n\t},\n\t{\n\t\tid: 3,\n\t\ttitle: {\n\t\t\tfr: 'Argent Bank',\n\t\t\ten: \"Argent Bank\",\n\t\t},\n\t\tcategory: 'React',\n\t\timg: UIImage1,\n\t\tlink: \"https://ssvgleo.github.io/Projet-10-OC/\",\n\t\tgithub: \"https://github.com/SSVGLeo/Projet-10-OC\",\n\t\tProjectInfo: {\n\t\t\tSeeSite: {\n\t\t\t\tfr: \"Voir le site\",\n\t\t\t\ten: \"The website\",\n\t\t\t},\n\t\t\tSeeCode: {\n\t\t\t\tfr: \"Voir le code\",\n\t\t\t\ten: \"The code\",\n\t\t\t},\n\t\t\tObjectivesDetails: {\n\t\t\t\tfr: \"Projet d'application bancaire en React. Utilisation du state tout en utilisant des Fetchs d'API REST.\",\n\t\t\t\ten: \"Banking application in React. Using state with REST API Fetchs calls.\",\n\t\t\t},\n\t\t\tProjectDetails: [\n\t\t\t\t{\n\t\t\t\t\tid: 1,\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tfr: \"Utilisation de React Redux pour manipuler le state.\",\n\t\t\t\t\t\ten: \"Using React Redux to manipulate the state.\",\n\t\t\t\t\t} ,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 2,\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tfr: \"MangoDB utiliser pour enregistrer les données de l'utilisateur.\",\n\t\t\t\t\t\ten: \"Used MangoDB to save user's data.\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]\n\t\t}\n\t},\n\t{\n\t\tid: 4,\n\t\ttitle: {\n\t\t\tfr: 'Ohmyfood',\n\t\t\ten: \"Ohmyfood\",\n\t\t},\n\t\tcategory: 'HTML/CSS',\n\t\timg: MobileImage1,\n\t\tlink: \"https://ssvgleo.github.io/Projet-4-fichiers/\",\n\t\tgithub: \"https://github.com/SSVGLeo/Projet-4-fichiers\",\n\t\tProjectInfo: {\n\t\t\tSeeSite: {\n\t\t\t\tfr: \"Voir le site\",\n\t\t\t\ten: \"The website\",\n\t\t\t},\n\t\t\tSeeCode: {\n\t\t\t\tfr: \"Voir le code\",\n\t\t\t\ten: \"The code\",\n\t\t\t},\n\t\t\tObjectivesDetails: {\n\t\t\t\tfr: \"Réalisation d'une maquette de site de commande de restauration en HTML/CSS.\",\n\t\t\t\ten: \"Produced a website order food mockup in HTML/CSS.\",\n\t\t\t} ,\n\t\t\tProjectDetails: [\n\t\t\t\t{\n\t\t\t\t\tid: 1,\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tfr: \"Utilisation de figma pour réaliser la maquette.\",\n\t\t\t\t\t\ten: \"Used figma to realize the mockup.\", \n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 2,\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tfr: \"Réalisation d'animations CSS pour améliorer l'expérience utilisateur.\",\n\t\t\t\t\t\ten: \"Produced CSS animations to improve user experience.\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]\n\t\t}\n\t},\n];\n","import { useState, createContext } from 'react';\nimport { projectsData } from '../data/projects';\nimport { useLanguage } from \"../translation/LanguageContext\";\n\n// Create projects context\nexport const ProjectsContext = createContext();\n\n// Create the projects context provider\nexport const ProjectsProvider = (props) => {\n\tconst [projects, setProjects] = useState(projectsData);\n\tconst [searchProject, setSearchProject] = useState('');\n\tconst [selectProject, setSelectProject] = useState('');\n\n\tconst {language} = useLanguage();\n\n\t// Search projects by project title\n\tconst searchProjectsByTitle = projects.filter((item) => {\n\t\tconst result = item.title[language]\n\t\t\t.toLowerCase()\n\t\t\t.includes(searchProject.toLowerCase())\n\t\t\t? item\n\t\t\t: searchProject === ''\n\t\t\t? item\n\t\t\t: '';\n\t\treturn result;\n\t});\n\n\t// Filter projects by category\n\n\tconst selectProjectsByCategory = selectProject === \"all\" || selectProject === \"\"\n\t? projects\n\t: projects.filter((item) => {\n\t\tlet category = item.category.charAt(0).toUpperCase() + item.category.slice(1);\n\t\treturn category.includes(selectProject);\n\t});\n\n\n\treturn (\n\t\t<ProjectsContext.Provider\n\t\t\tvalue={{\n\t\t\t\tprojects,\n\t\t\t\tsetProjects,\n\t\t\t\tsearchProject,\n\t\t\t\tsetSearchProject,\n\t\t\t\tsearchProjectsByTitle,\n\t\t\t\tselectProject,\n\t\t\t\tsetSelectProject,\n\t\t\t\tselectProjectsByCategory,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</ProjectsContext.Provider>\n\t);\n};\n"],"names":["_ref","title","category","image","onClick","_jsx","motion","div","initial","opacity","animate","delay","transition","ease","duration","children","_jsxs","className","src","alt","selectOptions","setSelectProject","language","useLanguage","onChange","e","target","value","translations","projects","map","option","project","onClose","exit","FiX","img","ProjectInfo","ObjectivesDetails","ProjectDetails","block","details","id","link","href","rel","SeeSite","github","SeeCode","ProjectsGrid","searchProject","setSearchProject","searchProjectsByTitle","selectProject","selectProjectsByCategory","useContext","ProjectsContext","selectedProject","setSelectedProject","useState","description","FiSearch","name","type","required","placeholder","research","ProjectsFilter","ProjectSingle","ProjectModal","Projects","ProjectsProvider","projectsData","fr","en","WebImage2","MobileImage1","createContext","props","setProjects","filter","item","toLowerCase","includes","charAt","toUpperCase","slice","Provider"],"sourceRoot":""}